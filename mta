#!/bin/bash

# Gradle helper script
# Params:
# 	- App flavor.
#	- These must be prefixed with a '-' and can be combined
#	  (e.g. -bri to build a release apk and deploy it to the device).
#		b -> Build new apk
#		i -> Install apk to device
#		r -> Use release apk
#		d -> Uninstall existing apk
#		o -> Open apk folder
#		v -> Discard version code changes
#		u -> Unsigned build (`signed` is default for variant `release`, while `unsigned` is default for variant `debug`)
#

flavor=free
build=false
variant="debug"
deploy=false
delete=false
openFolder=false
signature="signed"
bundle=false
uploadBundle=false

# Goto mt-directory, if no params are passed.
if [[ $# == 0 ]]; then
	mehrtanken;
	exit 1;
fi


for var in "$@"
do
	if [[ ${var:0:2} == "--" ]]; then
		if [[ ${var:2} =~ live|beta|admin ]]; then
			targetApi=${var:2}
			writeTargetApi ${var:2}
		elif [[ ${var:2} =~ nocheck ]]; then
    		printf "****** Won't run any verification\n";
			nocheck=true
		elif [[ ${var:2} =~ bundle ]]; then
    		printf "****** Will create AAB\n";
			bundle=true
		elif [[ ${var:2} =~ upload ]]; then
    		printf "****** Will upload AAB\n";
			uploadBundle=true
		elif [[ ${var:2} =~ v+ ]]; then
    		printf "****** Will increment version code\n";
			incVersion=true
		fi
	elif [[ ${var:0:1} == "-" ]]; then
		if [[ $var == *"b"* ]]; then
			build=true;
    		printf "****** Build new apk\n";
		fi
		if [[ $var == *"r"* ]]; then
			variant="release";
    		printf "****** Build variant: Release\n";
		fi
		if [[ $var == *"d"* ]]; then
	    	delete=true;
			printf "****** Delete existing apk \n";
		fi
		if [[ $var == *"i"* ]]; then
	    	deploy=true;
	    	printf "****** Install to device\n";
	    fi
		if [[ $var == *"o"* ]]; then
			openFolder=true
	        printf "****** Open apk folder when done\n";
	    fi
		if [[ $var == *"v"* ]]; then
		    git checkout -- version.properties
			printf "****** Version code changes have been discarded\n";
		fi
		if [[ $var == *"u"* ]]; then
			signature="unsigned"
		fi
	else
		flavor=$var;
		printf "****** Flavor: $flavor\n";
	fi
done

if [[ $variant == "debug" ]]; then
	signature="unsigned"
fi

Flavor="$(tr '[:lower:]' '[:upper:]' <<< ${flavor:0:1})${flavor:1}"
Variant="$(tr '[:lower:]' '[:upper:]' <<< ${variant:0:1})${variant:1}"
Signature="$(tr '[:lower:]' '[:upper:]' <<< ${signature:0:1})${signature:1}"

if [[ $build == true ]]; then
	if [[ $variant == "release" && $signature == "signed" ]]; then
		./gradlew clean

        ./gradlew incrementBuildNumber
	fi

	if [[ $flavor == "" ]]; then
		./gradlew assemblePaid$Signature$Variant
		./gradlew assembleFree$Signature$Variant
	else
		./gradlew assemble$Flavor$Signature$Variant
	fi

	if [[ $variant == "release" && $signature == "signed" ]]; then
		echo "Will copy apk and mapping files."
		if [[ $flavor == "" || $flavor == "paid" ]]; then
			echo Copying ./app/build/outputs/apk/paidSigned/release/*.apk to ./app/apk/release
			cp ./app/build/outputs/apk/paidSigned/release/*.apk ./app/apk/release/
			echo Copying ./app/build/outputs/apk/paidSigned/release/*.mapping to ./app/apk/release
			cp ./app/build/outputs/apk/paidSigned/release/*.mapping ./app/apk/release/
		fi
		if [[ $flavor == "" || $flavor == "free" ]]; then
			echo Copying ./app/build/outputs/apk/freeSigned/release/*.apk to ./app/apk/release
			cp ./app/build/outputs/apk/freeSigned/release/*.apk ./app/apk/release/
			echo Copying ./app/build/outputs/apk/freeSigned/release/*.mapping to ./app/apk/release
			cp ./app/build/outputs/apk/freeSigned/release/*.mapping ./app/apk/release/
		fi
	else
		echo "Will not copy apk and mapping files."
	fi
fi

if [[ $delete == true ]]; then
	if [[ $Flavor != "" ]]; then
		echo Uninstalling $flavor $signature release and debug
		./gradlew uninstall${Flavor}Release uninstall${Flavor}Debug
	else
		echo Uninstalling all app flavors
		./gradlew uninstallFreeDebug uninstallFreeRelease uninstallPaidDebug uninstallPaidRelease
	fi
fi

if [[ $deploy == true ]]; then
	if [[ $Flavor != "" ]]; then
		echo Installing $flavor $signature $variant
		./gradlew install${Flavor}Signed${Variant}
	else
		echo "Installing paid and free flavor."
		./gradlew installPaidSigned$Variant
		./gradlew installFreeSigned$Variant
	fi
fi
if [[ $bundle == true ]]; then

	echo Creating ${Flavor}SignedRelease AAB.
	./gradlew bundle${Flavor}SignedRelease

	path=./app/build/outputs/bundle/${flavor}SignedRelease/
	echo Copying ${path}/*.aab to ./app/apk/
	if [[ $uploadBundle == true ]]; then
		mkdir -p /home/simon/Dropbox/fidion/${flavor};
		cp ${path}/*.aab "/home/simon/Spaces/wf_Projekte/mehr-tanken/# Development/Android/APKs/Alpha"
	fi
	mv ${path}/*.aab ./app/apk/release/
	echo Done.

fi

if [[ $openFolder == true ]]; then
	openfolder ./app/apk
fi